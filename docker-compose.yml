version: "3.8"

services:
  app:
    image: zidio-app
    container_name: zidio-container
    ports:
      - "9090:8889"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-container:3306/zidio_connection?useSSL=false&allowPublicKeyRetrieval=true&connectTimeout=60000&socketTimeout=60000
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Yamini9573
      - SPRING_REDIS_HOST=redis-container
      - SPRING_REDIS_PORT=6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started   # ✅ ensures Redis starts before app

  mysql:
    image: mysql:8
    container_name: mysql-container
    environment:
      - MYSQL_ROOT_PASSWORD=Yamini9573
      - MYSQL_DATABASE=zidio_connection
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pYamini9573"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-container
    ports:
      - "6379:6379"              # host 6379 → container 6379
    volumes:
      - redis_data:/data         # ✅ persist Redis data
    command: ["redis-server", "--appendonly", "yes"]  # AOF persistence

volumes:
  mysql_data:
    external: true
  redis_data:                     # creates a volume for Redis
